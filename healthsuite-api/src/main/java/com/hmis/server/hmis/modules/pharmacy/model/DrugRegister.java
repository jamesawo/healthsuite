package com.hmis.server.hmis.modules.pharmacy.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.hmis.server.hmis.common.common.model.Auditable;
import com.hmis.server.hmis.common.common.model.DrugClassification;
import com.hmis.server.hmis.common.common.model.DrugFormulation;
import com.hmis.server.hmis.common.common.model.RevenueDepartment;
import javax.persistence.*;
import javax.validation.constraints.NotBlank;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;
import org.hibernate.annotations.ColumnDefault;

@Data
@Entity
@Table( name = "hmis_drug_register_data")
@EqualsAndHashCode( callSuper=true)
@NoArgsConstructor @ToString
@JsonIgnoreProperties( ignoreUnknown = true)
public class DrugRegister extends Auditable<String> {
	@Id
	@GeneratedValue( strategy = GenerationType.IDENTITY)
	private Long id;

	@OneToOne
	@JoinColumn(nullable = false, name = "revenue_department_id")
	private RevenueDepartment revenueDepartment;

	@OneToOne
	@JoinColumn(nullable = false, name = "formulation_id")
	private DrugFormulation formulation;

	@OneToOne
	@JoinColumn(nullable = false, name = "classification_id")
	private DrugClassification classification;

	@NotBlank( message = "Generic Name Is Required" )
	@Column( nullable = false, name = "generic_name" )
	private String genericName;

	@Column( nullable = false, name = "brand_name" )
	private String brandName;

	@Column( name = "strength" )
	private String strength;

	@Column( name = "unit_per_pack" )
	private Integer unitPerPack;

	@Column( nullable = false, name = "unit_of_issue" )
	private Integer unitOfIssue;

	@Column( nullable = false, name = "packs_per_packing_unit" )
	private Integer packsPerPackingUnit;

	@Column( nullable = false, name = "cost_price" )
	private Double costPrice;

	@Column( nullable = false, name = "unit_cost_price" )
	private Double unitCostPrice;

	@Column( nullable = false, name = "nhis_markup" )
	private Integer nhisMarkup;

	@Column( nullable = false, name = "general_markup" )
	private Integer generalMarkUp;

	@Column( nullable = false, name = "regular_selling_price" )
	private Double regularSellingPrice;

	@Column( nullable = false, name = "nhis_selling_price" )
	private Double nhisSellingPrice;

	@Column( name = "discount_percent" )
	@ColumnDefault( "0.00" )
	private Double discountPercent;

	@Column( name = "auto_generated_code", unique = true )
	private String autoGeneratedCode;

	@Column( name = "reorder_level" )
	@ColumnDefault( "50" )
	private Integer reorderLevel = 50;

	public String fullBrandName() {
		return this.brandName + " " + this.genericName + " " + this.strength;
	}

	public DrugRegister(Long id) {
		this.id = id;
	}
}
